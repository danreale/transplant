// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "transplant_data",
    columns: [
      { name: "region", type: "string" },
      { name: "report_date", type: "string" },
      { name: "wait_list_type", type: "text" },
      { name: "wait_list_time", type: "text" },
      { name: "blood_type_a", type: "int" },
      { name: "blood_type_b", type: "int" },
      { name: "blood_type_o", type: "int" },
      { name: "blood_type_ab", type: "int" },
      { name: "blood_type_all", type: "int" },
    ],
  },
  {
    name: "center_data",
    columns: [
      { name: "heart", type: "int" },
      { name: "report_date", type: "string" },
    ],
  },
  {
    name: "donor_data",
    columns: [
      { name: "gender", type: "string" },
      { name: "ethnicity", type: "string" },
      { name: "blood_type_o", type: "int" },
      { name: "blood_type_b", type: "int" },
      { name: "report_date", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type TransplantData = InferredTypes["transplant_data"];
export type TransplantDataRecord = TransplantData & XataRecord;

export type CenterData = InferredTypes["center_data"];
export type CenterDataRecord = CenterData & XataRecord;

export type DonorData = InferredTypes["donor_data"];
export type DonorDataRecord = DonorData & XataRecord;

export type DatabaseSchema = {
  transplant_data: TransplantDataRecord;
  center_data: CenterDataRecord;
  donor_data: DonorDataRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Dan-Reale-s-workspace-3m1pjh.us-east-1.xata.sh/db/transplant",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
